name: Go Build with Frontend

on:
  push:
    branches: 
    - main
    - release/*
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Go 环境设置
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # 检查是否需要构建前端
    - name: Check if frontend directory exists
      id: check_frontend
      run: |
        if [ -d "frontend" ]; then
          echo "frontend_exists=true" >> $GITHUB_OUTPUT
        else
          echo "frontend_exists=false" >> $GITHUB_OUTPUT
        fi

    # 前端构建（条件执行）
    - name: Set up Node.js
      if: steps.check_frontend.outputs.frontend_exists == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '23'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Cache Node.js modules
      if: steps.check_frontend.outputs.frontend_exists == 'true'
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build frontend
      if: steps.check_frontend.outputs.frontend_exists == 'true'
      run: |
        cd frontend
        npm ci  # 使用 ci 而不是 install 以获得更可靠的构建
        npm run build

    # Go 构建和测试
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
